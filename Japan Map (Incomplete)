###################################
# Geometric Targeting Analysis
# ---------------------------------
# Created by  : Adam Nguyen
# Updated by  : Adam Nguyen
# Created at  : 11/07/2013
# Updated at  : xx/xx/xxxx
# Description : Exe ggmap
###################################

#Clear Environment
rm(list = ls(all = TRUE)) 

#Set Directory
setInternet2(TRUE)
myfolder <- "C:/Users/adam.nguyen/Desktop/Useful R/"
setwd(myfolder)
source(paste(c(myfolder,"library.R"),collapse="")) #Get library

#Read shape file
JPN.spdf <- readOGR("C:/Users/adam.nguyen/Desktop/JPN_adm", "JPN_adm0", verbose = TRUE, stringsAsFactors = FALSE)

#Select colors
library(RColorBrewer)
colors <- brewer.pal(9, "BuGn")

#Get map
mapImage <- get_map(location = c(lon = -118, lat = 37.5),
                    color = "color",
                    source = "osm",
                    # maptype = "terrain",
                    zoom = 6)

area.points <- fortify(area)

ggmap(mapImage) +
  geom_polygon(aes(x = long,
                   y = lat,
                   group = group),
               data = area.points,
               color = colors[9],
               fill = colors[6],
               alpha = 0.5) +
  labs(x = "Longitude",
       y = "Latitude")


library(maptools)
area <- readShapePoly("ne_10m_parks_and_protected_lands_area.shp")


xz

JPN.admxx2.spdf <- readOGR("C:/Users/adam.nguyen/Desktop/JPN_adm", "JPN_adm1", verbose = TRUE, stringsAsFactors = FALSE)

japan.adm2.df <- fortify(japan.adm2.spdf, region = "NAME_2")

unemployment.df <- data.frame(id= unique(japan.adm2.df[,'id']),
                              unemployment = runif(n = length(unique(japan.adm2.df[,'id'])), min = 0, max = 25))

japan.adm2.df <- merge(japan.adm2.df, unemployment.df, by.y = 'id', all.x = TRUE)


japan.adm2.centroids.df <- data.frame(long = coordinates(japan.adm2.spdf)[, 1], 
                                         lat = coordinates(japan.adm2.spdf)[, 2]) 

# Get names and id numbers corresponding to administrative areas
japan.adm2.centroids.df[, 'ID_2'] <- japan.adm2.spdf@data[,'ID_2']
japan.adm2.centroids.df[, 'NAME_2'] <- japan.adm2.spdf@data[,'NAME_2']


p <- ggplot(japan.adm2.df, aes(x = long, y = lat, group = group)) + geom_polygon(aes(fill = cut(unemployment,5))) +
  geom_text(data = japan.adm2.centroids.df, aes(label = NAME_2, x = long, y = lat, group = NAME_2), size = 3) + 
  labs(x=" ", y=" ") + 
  theme_bw() + scale_fill_brewer('Unemployment Rate (Jan 2011)', palette  = 'PuRd') + 
  coord_map() + 
  theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) + 
  theme(axis.ticks = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank()) + 
  theme(panel.border = element_blank())

print(p)




#Clear Environment
rm(list = ls(all = TRUE)) 

#Set Directory
setInternet2(TRUE)
myfolder <- "C:/Users/adam.nguyen/Desktop/Useful R/"
setwd(myfolder)
source(paste(c(myfolder,"library.R"),collapse="")) #Get library

#Get map
japan <- get_map(location = "Japan", source = "openmap")

qmap("japan", zoom = 16, source = "google")

install.packages("OpenStreetMap")
library(OpenStreetMap)

#Get map
japan.adm.spdf <- readOGR("C:/Users/adam.nguyen/Desktop/Useful R/JPN_adm", verbose = TRUE, stringsAsFactors = FALSE)




##############Unrelated

###http://journal.r-project.org/archive/2013-1/kahle-wickham.pdf

#Proxy Server
setInternet2(TRUE)

#Clear Environment
rm(list = ls(all = TRUE)) 

install.packages("OpeStreetMap")
library(OpeStreetMap)
library(ggmap)
library(RgoogleMaps)
library(ggplot2)
library(rgdal)
library(raster)
myfolder <- "C:/Users/adam.nguyen/Desktop/Useful R/"
setwd(myfolder)
source(paste(c(myfolder,"library.R"),collapse="")) #Get library



map <- as.data.frame(read.csv("C:/Users/adam.nguyen/Desktop/Useful R/UsageMap.csv"), na.rm=TRUE)
map <- map[2:48,]
map <- map[,c(1,2,3,6)]

map$longitude <- as.numeric(map$longitude)
map$latitude <- as.numeric(map$latitude)

head(map)

#Get a map using get_map
geocode("Tokyo")

baylor <- "baylor university"
qmap(baylor, zoom = 14, source = "google")


#Test a good map
set.seed(500)
df <- round(data.frame(
  x = jitter(rep(-95.36, 50), amount = .3),
  y = jitter(rep( 29.76, 50), amount = .3)
), digits = 2)
map <- get_googlemap('houston', markers = df,
                     path = df, scale = 2)
ggmap(map, extent = 'device')

#Test a qmap with different maptypes
qmap(baylor, zoom = 14, source = "stamen",
     maptype = "watercolor")

qmap(baylor, zoom = 14, source = "stamen",
     maptype = "watercolor")

qmap(baylor, zoom = 14, maptype = 53428, api_key = api_key, source = "cloudmade")

qmap("houston", zoom = 10, maptype = 58916, api_key = api_key, source = "cloudmade")


#Ploting paris
paris <- get_map(location = "paris")

ggplot(aes(x=lon, y=lat), data=paris) +
  geom_blank() + coord_map("mercator") +
  annotation_raster(ggmap, xmin, xmax, ymin, ymax)

ggmap(paris, extent = "normal")

str(crime$offense)

##Map Data Processing

#Plot map
qmap("houston", zoom = 13)

#Determine bounding box
gglocator(2)

#Get only violent crimes
violent_crimes <- subset(crime, offense!="auto theft" & offense!="theft" & offense!="burglary")
unique(violent_crimes$offense)

#order violent crimes by levls
violent_crimes$offense <- factor(violent_crimes$offense, levels = c("robbery", "aggravated assault", "rape", "murder"))
str(violent_crimes$offense)
unique(violent_crimes$offense)

#restrict to downtown using coordinates from gglocator(2)
violent_crimes <- subset(violent_crimes, -95.39681 <= lon & lon <= -95.34188 & 29.73631 <= lat & lat <= 29.78400)
unique(violent_crimes$offense)

##Map Plotting
theme_set(theme_bw(16))

HoustonMap <- qmap("houston", zoom = 14, color = "bw", legend = "topleft")

HoustonMap + geom_point(aes(x = lon, y = lat, colour = offense, size = offense), data = violent_crimes)

HoustonMap +
  stat_bin2d(
  aes(x = lon, y = lat, colour = offense, fill = offense),
  size = .5, bins = 30, alpha = 1/2,
  data = violent_crimes)


##Contour Plot of Violent Crime in General for frequencies
houston <- get_map("houston", zoom = 14)

HoustonMap <- ggmap(houston, extent = "device", legend = "topleft")

HoustonMap +
  stat_density2d(
    aes(x = lon, y = lat, fill = ..level..,
        alpha = ..level..),
    size = 2, bins = 4, data = violent_crimes,
    geom = "polygon")

overlay <- stat_density2d(
  aes(x = lon, y = lat, fill = ..level..,
      alpha = ..level..),
  bins = 4, geom = "polygon",
  data = violent_crimes)

HoustonMap + overlay + inset(
  grob = ggplotGrob(ggplot() +
                      overlay + theme_inset()),
  xmin = -95.35836, xmax = Inf,
  ymin = -Inf, ymax = 29.75062
)


##Create facets
houston <- get_map(location = "houston",
                   zoom = 14, color = "bw", source = "osm")

HoustonMap <- ggmap(houston,
                    base_layer = ggplot(aes(x = lon, y = lat),
                                        data = violent_crimes))

HoustonMap +
  stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
                 bins = 5, geom = "polygon",
                 data = violent_crimes) +
  scale_fill_gradient(low = "black",
                      high= "red") +
  facet_wrap(~ day)

japan <- read.csv("C:/Users/adam.nguyen/Desktop/Useful R/UsageMap.csv")
str(japan)
japan <- japan[2:48,]
japan$geocode <- geocode(as.vector(japan$pref_name_eng))

geocode("baylor university", output = "more")

##Creating travel routes for locations
from <- c("houston", "houston", "dallas")
to <- c("waco, texas", "san antonio", "houston")

mapdist(from, to) #these can be modified for physical addresses using revgeocode and change for travel style

##Checks query limits for within the last 24 hours
distQueryCheck()

#bin distance into categories using "cut" and plot with qmap


#Use Route for analyzing pathways
legs_df <- route(
  "marrs mclean science, baylor university",
  "220 south 3rd street, waco, tx 76701",
  alternatives = TRUE)

qmap("424 clay avenue, waco, tx", zoom = 15, maptype = "hybrid",
     base_layer = ggplot(aes(x = startLon, y = startLat), data = legs_df)) +
  geom_leg(
    aes(x = startLon, y = startLat, xend = endLon, yend = endLat,
        colour = route),
    alpha = 3/4, size = 2, data = legs_df
  ) +
  labs(x = "Longitude", y = "Latitude", colour = "Route") +
  facet_wrap(~ route, ncol = 3) + theme(legend.position = "top")

#Add shape files into map
download.file("http://www.census.gov/geo/cob/bdy/tr/tr00shp/tr48_d00_shp.zip", destfile = "census.zip")

shapefile <- unzip("C:/Users/adam.nguyen/Desktop/Useful R/tr48_d00_shp.zip")
str(shapefile)

gpclibPermit()

#Read shape files into data
shapefile <- readShapeSpatial("tr48_d00.shp", proj4string = CRS("+proj=longlat +datum=WGS84"))

data <- fortify(shapefile)
qmap("texas", zoom = 6, maptype = "satellite") +
  geom_polygon(aes(x = long, y = lat, group = group), data = data,
               colour = "white", fill = "black", alpha = .4, size = .3)

